}
op = optim(c(0.5,0.5,1,1), func, control = list(maxit = 50))
op
R
gain
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
sim = simulation(x0,res)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(new=T)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
u2=diff(X0[3,])/dt
u2
plot(u2)
plot(u2, type='l')
plot(sim$u[2,], type='l')
plot(sim$u[2,], type='l')
par(new=T)
plot(u2, type='l')
plot(u2, type='l', ylim =c(-0.6,0))
par(new=T)
plot(sim$u[2,], type='l', ylim =c(-0.6,0))
dim(sim$u)
dim(sim$x)
dim(sim$x)
plot(sim$x[5,], type='l', ylim =c(-0.6,0))
plot(sim$x[5,], type='l', ylim =c(-0.5,0))
par(new=T)
plot(u2, type='l', ylim =c(-0.5,0), col=2)
plot(sim$u[2,], type='l', ylim =c(-0.5,0))
plot(sim$u[2,], type='l')
plot(sim$u[2,], type='l', ylim =c(-0.7,0))
par(new=T)
plot(sim$x[5,], type='l', ylim =c(-0.7,0))
plot(sim$x[4,], type='l')
par(new=T)
plot(sim$u[1,], type='l')
plot(sim$u[1,], type='l', ylim =  c(0,1))
par(new=T)
plot(sim$x[4,], type='l', ylim =  c(0,1))
source("ilqg.R")
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
par(new=T)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
par(new=T)
sim = simulation(x0,res)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
plot(sim$x)
plot(sim$x[4,])
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$u[1,], type='l')
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l')
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
sim = simulation(x0,res)
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
plot(sim$x[4,], type='l')
plot(sim$x[4,], type='l')
tau = 1.08
amax = 1+log(1+exp(2*(tau-Tf)))/2
amax
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
plot(sim$x[4,], type='l', ylim = c(0,1))
par(new=T)
plot(sim$u[1,], type='l', ylim = c(0,1), col=2)
tau = 10.08
amax = 1+log(1+exp(2*(tau-Tf)))/2
amaz
amax
tau = 100.08
amax = 1+log(1+exp(2*(tau-Tf)))/2
amax
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$u[1,], type='l', ylim = c(0,1), col=2)
plot(sim$x[4,], type='l', ylim = c(0,1))
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
plot(sim$u[1,], type='l', ylim = c(0,1), col=2)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
plot(sim$x[4,], type='l', ylim = c(0,1))
N
N= 100
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
gain =c(1,1)
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
gain
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
plot(sim$u[4,], type='l', ylim = c(0,1))
plot(sim$u[2,], type='l', ylim = c(0,1))
plot(sim$u[2,], type='l')
plot(sim$u[1],], type='l')
plot(sim$u[1,], type='l')
plot(sim$u[1],], type='l', ylim = c(0,0.5))
plot(sim$u[1,], type='l', ylim = c(0,0.5))
par(new=T)
plot(sim$x[4,], type='l', ylim = c(0,0.5))
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,1))
par(new=T)
plot(sim$u[1,], type='l', ylim = c(0,0.5))
plot(sim$u[1,], type='l', ylim = c(0,0.5))
plot(sim$u[1,], type='l', )
grid()
plot(sim$x[4,], type='l', ylim = c(0,1))
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l', ylim = c(0,0.5))
plot(sim$u[1,], type='l', )
par(new=T)
plot(sim$x[4,], type='l')
Qf
plot(diff(sim$x[4,])/dt, type='l')
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l', )
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$u[1,], type='l', )
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l', )
plot(sim$x[4,], type='l')
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l', )
par(new=T)
plot(sim$x[4,], type='l')
plot(sim$u[1,], type='l', ylim=c(0,0.35))
par(new=T)
plot(sim$x[4,], type='l', ylim=c(0,0.35), col=2)
gain0
gain = gain0
R = R0
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
X0= sim$x
dim(X0)
func = function(p){
R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[3:4]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
op = optim(c(0.5,1.5,1,1), func, method = "BFGS")
N = 50
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
X0 = sim$x
op = optim(c(0.5,1.5,1,1), func, method = "BFGS")
op = optim(c(0.5,1.5,0.1,0.1), func, method = "BFGS")
op
p = op$par
R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[3:4]
R
gain
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(new=T)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(new=T)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
Sys.time()
t0v=vSys.time()
t0=Sys.time()
t1=Sys.time()
t1-t0
system.time()
system.time(for(i in 1:1000))
system.time(for(i in 1:1000){})
system.time(for(i in 1:10000){})
system.time(for(i in 1:10000){i})
system.time(for(i in 1:100000){i})
system.time(for(i in 1:1000000){i})
R
gain
gain0
R
gain
R0
gain0
R = R0
gain = gain0
s
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/simulate.R')
source("ilqg.R")
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
x
x = rnorm(1000)
y = x^2
cor(x,y)
cor(x,y)
y = x^2 + x
cor(x,y)
y = x^2 + 5*x
cor(x,y)
y = x^2 + sqrt(x) + x^3
y = x^2  + x^3
cor(x,y)
x = rnorm(1000)
y = x^2  + x^3
cor(x,y)
y = x^3
cor(x,y)
cor(x,y)
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
func = function(p){
R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[3:4]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
system.time(op = optim(runif(4), func))
func = function(p){
R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[3:4]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
op = optim(runif(4), func)
system.time({op = optim(runif(4), func)})
op$par
op
op$par
func(op$par)
func(op$par)
R
R
gain
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(new=T)
R = R0
gain = gain0
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim0 = simulation(x0,res)
vec_plot(sim0$x[1:2,], sim0$x[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
sum((sim0$x - sim$x)^2)
mean((sim0$x - sim$x)^2)
sum((X0 - sim$x)^2)
mean((X0 - sim$x)^2)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
X0 = sim0$x
system.time({op = optim(runif(4), func, method = "BFGS")})
op$par
4861/60
op$par
func(op$par)
op$par
R
gain
R0
gain0
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = T, rand = F)
sim = simulation(x0,res)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(new=T)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(mar = c(0,0,0,0))
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(mar = c(1,1,1,1))
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(mar = c(2,2,1,1))
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
par(mar = c(2.5,2.5,1,1))
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
par(new=T)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=7,asp=1)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=1,asp=1)
par(new=T)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
vec_plot(X0[1:2,], X0[3,],xlim = c(0,2),ylim = c(0,2),col=1,asp=1)
par(new=T)
vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=3,asp=1)
mean((sim$x-X0)^2)
R
gain
1/0.81
R[1,1]/gain[1]^2
R[2,2]/gain[2]^2
R = R0
func = function(p){
#R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[1:2]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
system.time({op = optim(runif(4), func, method = "BFGS", control = list(maxit = 2))})
system.time({op = optim(runif(2), func, method = "BFGS", control = list(maxit = 2))})
func(op$par)
R
gain
system.time({op = optim(runif(2), func, method = "BFGS", control = list(maxit = 10))})
s
s = 0
s=1
source('~/Documents/Acads/FireflyProject-master/Rcodes/Ver 3.2.1/sys_dynamics.R')
wm = 1
func = function(p){
#R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[1:2]
wm = p[3]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
system.time({op = optim(runif(3), func, method = "BFGS", control = list(maxit = 10))})
op$par
s
wm
R
wm
func = function(p){
#R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[1:2]
#wm <<- p[3]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
gain0
system.time({op = optim(runif(3), func, method = "BFGS", control = list(maxit = 10))})
system.time({op = optim(runif(2), func, method = "BFGS", control = list(maxit = 10))})
wm
func = function(p){
#R <<- diag(p[1:2])+ 0.01*diag(2)
gain <<- p[1:2]
wm <<- p[3]
res = ilqg(x0, N, maxIter = 100, eps=1e-5,logg = F, rand = F)
print(paste("cost = ", res$cost))
#cat('.'); cat("\014");
sim = simulation(x0,res)
#vec_plot(sim$x[1:2,], sim$x[3,],xlim = c(0,2),ylim = c(0,2),col=2,asp=1)
ans = mean((sim$x-X0)^2)
print(paste("value = ", ans))
ans
}
system.time({op = optim(runif(3), func, method = "BFGS", control = list(maxit = 10))})
op$par
library(mvtnorm)
m= 3
sigma = diag(3)
sigma[2,1] = 3/5
sigma
sigma[3,1] = 1/3
sigma[3,2] = 1/15
sigma[3,2] = 11/15
sigma
dat = rmvnorm(1000, c(0,0,0), sigma)
pmvnorm(mean=rep(0, m), sigma, lower=rep(-Inf, m), upper=c(1,4,2))
pmvnorm(mean=rep(0, m), sigma, lower=rep(-Inf, m), upper=rep(Inf,m))
sigma
sigma = sigma + t(sigma)
sigma
diag(sigma)
diag(sigma) = 1
sigma
pmvnorm(mean=rep(0, m), sigma, lower=rep(-Inf, m), upper=rep(Inf,m))
pmvnorm(mean=rep(0, m), sigma, lower=rep(-Inf, m), upper=c(1,4,2))
pmvnorm(mean=rep(0, m), sigma, lower=rep(-Inf, m), upper=c(1,4,2))
pmvnorm(mean=0, 1, lower=-Inf, upper=Inf)
pmvnorm(mean=0,sigma= 1, lower=-Inf, upper=Inf)
pmvnorm(mean=0,sigma= 0.5, lower=-Inf, upper=Inf)
pmvnorm(mean=0,sigma= 0.5, lower=-Inf, upper=0)
pmvnorm(mean=0,sigma= 0.5, lower=-Inf, upper=0.5)
pmvnorm(mean=0,sigma= 1, lower=-Inf, upper=0.5)
pmvnorm(mean=0,sigma= 1, lower=-Inf, upper=2)
pmvnorm(mean=0,sigma= 0.25, lower=-Inf, upper=1)
pmvnorm(mean=0,sigma= 0.5, lower=-Inf, upper=1.22)
x = rnorm(10000,0,1)
mean(x^2)
x = rnorm(100000,0,1)
mean(x^2)
mean(x^3)
mean(x)
mean(sin(x))
mean(cos(x))
op$par
exp(-0.5)
mean(cos(x))
x = rnorm(1000000,0,1)
mean(cos(x))
x = rnorm(1000000,0,1)
mean(cos(x))
y = seq(-50,50,0.0001)
sum(cos(y)*dnorm(y))*0.0001
sum(y^2*dnorm(y))*0.0001
sum(y^3*dnorm(y))*0.0001
